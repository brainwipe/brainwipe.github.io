{"version":3,"file":"component---src-pages-using-typescript-tsx-969dc12c2069f0e8afef.js","mappings":"qNA4CaA,EAA0B,WAAH,OAASC,EAAAA,cAACC,EAAAA,EAAG,CAACC,MAAM,oBAAqB,EAE7E,UAjCwD,SAAH,OACnDC,EAAI,EAAJA,KACAC,EAAI,EAAJA,KACAC,EAAQ,EAARA,SAAQ,OAERL,EAAAA,cAACM,EAAAA,EAAM,CAACJ,MAAM,mBAAmBG,SAAUA,GACzCL,EAAAA,cAAAA,KAAAA,KAAAA,0CACAA,EAAAA,cAAAA,IAAAA,KAAAA,4CAC2CA,EAAAA,cAAAA,KAAAA,KAAAA,YAAiB,+DACdA,EAAAA,cAAAA,KAAAA,KAAAA,eAAoB,wEAGlEA,EAAAA,cAAAA,IAAAA,KAAAA,4CAC2CA,EAAAA,cAAAA,KAAAA,KAAAA,cAAmB,oBACxDA,EAAAA,cAAAA,KAAAA,KAAAA,cAAmB,gBAAaA,EAAAA,cAAAA,KAAAA,KAAAA,YAAiB,UAEvDA,EAAAA,cAAAA,IAAAA,KAAAA,kCACiCI,EAAI,uBAAsB,IACxDD,EAAKI,KAAKC,UAAS,KAEtBR,EAAAA,cAAAA,IAAAA,KAAAA,kCACkC,IAChCA,EAAAA,cAAAA,IAAAA,CAAGS,KAAK,yEAAuE,kCAE3E,KAGNT,EAAAA,cAACU,EAAAA,KAAI,CAACC,GAAG,KAAG,2BACL,C,+CCNX,IAhCe,SAAH,GAAuC,IAG7CC,EAHYP,EAAQ,EAARA,SAAUH,EAAK,EAALA,MAAOW,EAAQ,EAARA,SAE3BC,EAD6B,MAChBT,EAASU,SAiB5B,OAbEH,EADEE,EAEA,sBAAIE,UAAU,gBACZ,gBAAC,EAAAN,KAAI,CAACC,GAAG,KAAKT,IAKhB,gBAAC,EAAAQ,KAAI,CAACM,UAAU,mBAAmBL,GAAG,KACnCT,GAML,uBAAKc,UAAU,iBAAiB,oBAAmBF,GACjD,0BAAQE,UAAU,iBAAiBJ,GACnC,4BAAOC,GACP,oCACK,IAAII,MAAOC,cAAa,mBAE3B,qBAAGT,KAAK,4BAA0B,WAI1C,C,+CCtBMR,EAAM,SAAH,GAAgD,IAAD,MAAzCkB,EAAW,EAAXA,YAAmBjB,GAAF,EAAJkB,KAAW,EAALlB,OAAOW,EAAQ,EAARA,SAC/BN,GAASc,EAAAA,EAAAA,gBAAe,cAAxBd,KAgBFe,EAAkBH,GAAeZ,EAAKgB,aAAaJ,YACnDK,EAAgC,QAApB,EAAGjB,EAAKgB,oBAAY,aAAjB,EAAmBrB,MAExC,OACE,gCACE,6BAAQsB,EAAkBtB,EAAK,MAAMsB,EAAiBtB,GACtD,wBAAMuB,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAASxB,IACnC,wBAAMyB,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBACED,KAAK,kBACLC,SAA0B,QAAjB,EAAAnB,EAAKgB,oBAAY,OAAQ,QAAR,EAAjB,EAAmBK,cAAM,WAAR,EAAjB,EAA2BC,UAAO,KAE7C,wBAAMJ,KAAK,gBAAgBC,QAASxB,IACpC,wBAAMuB,KAAK,sBAAsBC,QAASJ,IACzCT,EAGP,EAEAZ,EAAI6B,aAAe,CACjBX,YAAY,IAQd,K","sources":["webpack://gatsby-starter-blog/./src/pages/using-typescript.tsx","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\r\nimport * as React from \"react\"\r\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\ntype DataProps = {\r\n  site: {\r\n    buildTime: string\r\n  }\r\n}\r\n\r\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\r\n  data,\r\n  path,\r\n  location,\r\n}) => (\r\n  <Layout title=\"Using TypeScript\" location={location}>\r\n    <h1>Gatsby supports TypeScript by default!</h1>\r\n    <p>\r\n      This means that you can create and write <em>.ts/.tsx</em> files for your\r\n      pages, components etc. Please note that the <em>gatsby-*.js</em> files\r\n      (like gatsby-node.js) currently don't support TypeScript yet.\r\n    </p>\r\n    <p>\r\n      For type checking you'll want to install <em>typescript</em> via npm and\r\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\r\n    </p>\r\n    <p>\r\n      You're currently on the page \"{path}\" which was built on{\" \"}\r\n      {data.site.buildTime}.\r\n    </p>\r\n    <p>\r\n      To learn more, head over to our{\" \"}\r\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\r\n        documentation about TypeScript\r\n      </a>\r\n      .\r\n    </p>\r\n    <Link to=\"/\">Go back to the homepage</Link>\r\n  </Layout>\r\n)\r\n\r\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\r\n\r\nexport default UsingTypescript\r\n\r\nexport const query = graphql`\r\n  {\r\n    site {\r\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\r\n    }\r\n  }\r\n`\r\n","import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst Layout = ({ location, title, children }) => {\r\n  const rootPath = `${__PATH_PREFIX__}/`\r\n  const isRootPath = location.pathname === rootPath\r\n  let header\r\n\r\n  if (isRootPath) {\r\n    header = (\r\n      <h1 className=\"main-heading\">\r\n        <Link to=\"/\">{title}</Link>\r\n      </h1>\r\n    )\r\n  } else {\r\n    header = (\r\n      <Link className=\"header-link-home\" to=\"/\">\r\n        {title}\r\n      </Link>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\r\n      <header className=\"global-header\">{header}</header>\r\n      <main>{children}</main>\r\n      <footer>\r\n        Â© {new Date().getFullYear()}, Built with\r\n        {` `}\r\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Seo = ({ description, lang, title, children }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            social {\r\n              twitter\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta\r\n        name=\"twitter:creator\"\r\n        content={site.siteMetadata?.social?.twitter || ``}\r\n      />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nSeo.defaultProps = {\r\n  description: ``,\r\n}\r\n\r\nSeo.propTypes = {\r\n  description: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Seo\r\n"],"names":["Head","React","Seo","title","data","path","location","Layout","site","buildTime","href","Link","to","header","children","isRootPath","pathname","className","Date","getFullYear","description","lang","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","defaultProps"],"sourceRoot":""}